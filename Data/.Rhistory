knitr::opts_chunk$set(echo = TRUE)
install.packages("raster")
library(tidyverse)
library(tidycensus)
library(sf)
library(dplyr)
library(raster)
county17 <-
get_acs(geography = "county",
variables = c("B25070_007E",
"B25070_008E",
"B25070_009E",
"B25070_010E",
"B25070_011E",
"B25003_003E"),
year=2017, state="NC",
geometry=TRUE, output="wide") %>%
st_transform('EPSG:4326') %>%
rename(RentBurden_30_35 = B25070_007E,
RentBurden_35_39 = B25070_008E,
RentBurden_40_49 = B25070_009E,
RentBurden_50_99 = B25070_010E,
RentBurden_60_more = B25070_011E,
total_renter_occupied = B25003_003E) %>%
dplyr::select(-starts_with("B")) %>%
mutate(rent_burdened_households = RentBurden_30_35 + RentBurden_35_39 + RentBurden_40_49 + RentBurden_50_99 + RentBurden_60_more,
Percent_rent_burdened = round((rent_burdened_households / total_renter_occupied) * 100, 0),
NAME = str_replace(NAME, ", North Carolina", "")) %>%
filter(NAME %in% c("Avery County", "Wilkes County", "Ashe County", "Watauga County","Caldwell County")) %>%
select(GEOID, NAME, rent_burdened_households, total_renter_occupied, Percent_rent_burdened)
county17 <-
get_acs(geography = "county",
variables = c("B25070_007E",
"B25070_008E",
"B25070_009E",
"B25070_010E",
"B25070_011E",
"B25003_003E"),
year=2017, state="NC",
geometry=TRUE, output="wide") %>%
st_transform('EPSG:4326') %>%
rename(RentBurden_30_35 = B25070_007E,
RentBurden_35_39 = B25070_008E,
RentBurden_40_49 = B25070_009E,
RentBurden_50_99 = B25070_010E,
RentBurden_60_more = B25070_011E,
total_renter_occupied = B25003_003E) %>%
dplyr::select(-starts_with("B")) %>%
mutate(rent_burdened_households = RentBurden_30_35 + RentBurden_35_39 + RentBurden_40_49 + RentBurden_50_99 + RentBurden_60_more,
Percent_rent_burdened = round((rent_burdened_households / total_renter_occupied) * 100, 0),
NAME = str_replace(NAME, ", North Carolina", "")) %>%
dplyr::filter(NAME %in% c("Avery County", "Wilkes County", "Ashe County", "Watauga County","Caldwell County")) %>%
dplyr::select(GEOID, NAME, rent_burdened_households, total_renter_occupied, Percent_rent_burdened)
county22 <-
get_acs(geography = "county",
variables = c("B25070_007E",
"B25070_008E",
"B25070_009E",
"B25070_010E",
"B25070_011E",
"B25003_003E"),
year=2022, state="NC",
geometry=TRUE, output="wide") %>%
st_transform('EPSG:4326') %>%
rename(RentBurden_30_35 = B25070_007E,
RentBurden_35_39 = B25070_008E,
RentBurden_40_49 = B25070_009E,
RentBurden_50_99 = B25070_010E,
RentBurden_60_more = B25070_011E,
total_renter_occupied = B25003_003E) %>%
dplyr::select(-starts_with("B")) %>%
mutate(rent_burdened_households = RentBurden_30_35 + RentBurden_35_39 + RentBurden_40_49 + RentBurden_50_99 + RentBurden_60_more,
Percent_rent_burdened = round((rent_burdened_households / total_renter_occupied) * 100, 0),
NAME = str_replace(NAME, ", North Carolina", "")) %>%
dplyr::filter(NAME %in% c("Avery County", "Wilkes County", "Ashe County", "Watauga County", "Caldwell County")) %>%
dplyr::select(GEOID, NAME, rent_burdened_households, total_renter_occupied, Percent_rent_burdened)
county17 <- county17 %>% mutate(year = 2017)
county22 <- county22 %>% mutate(year = 2022)
combined_years <- bind_rows(county17, county22)
ggplot(data = county17) +
geom_sf(aes(fill = Percent_rent_burdened), color = color_palette) +
geom_sf_text(aes(label = NAME),
size = 4, # Adjusted size
colour = "white",
check_overlap = TRUE,
fontface = "bold") + # Make text bold
geom_sf_text(aes(label = paste0(Percent_rent_burdened, "%")),
size = 3.5, # Adjusted size
colour = "white",
check_overlap = TRUE,
nudge_y = -0.05,
fontface = "bold") + # Make text bold
labs(title = "Rent Burdened Households by County",
subtitle = "Year: 2017") +
theme_void() +
theme(legend.position = "right")
View(county17)
color_palette <- c("#e2a334", "#f9bf3e", "#fcd977", "#9ad7d2", "#3e7067", "#74c1b9"
ggplot(data = county17) +
ggplot(data = county17) +
geom_sf(aes(fill = Percent_rent_burdened), color = color_palette) +
geom_sf_text(aes(label = NAME),
size = 4, # Adjusted size
colour = "white",
check_overlap = TRUE,
fontface = "bold") + # Make text bold
geom_sf_text(aes(label = paste0(Percent_rent_burdened, "%")),
size = 3.5, # Adjusted size
colour = "white",
check_overlap = TRUE,
nudge_y = -0.05,
fontface = "bold") + # Make text bold
labs(title = "Rent Burdened Households by County",
subtitle = "Year: 2017") +
theme_void() +
theme(legend.position = "right")
install.packages("raster")
library(tidyverse)
library(tidycensus)
library(sf)
library(dplyr)
library(raster)
color_palette <- c("#e2a334", "#f9bf3e", "#fcd977", "#9ad7d2", "#3e7067", "#74c1b9")
ggplot(data = county17) +
geom_sf(aes(fill = Percent_rent_burdened), color = color_palette) +
geom_sf_text(aes(label = NAME),
size = 4, # Adjusted size
colour = "white",
check_overlap = TRUE,
fontface = "bold") + # Make text bold
geom_sf_text(aes(label = paste0(Percent_rent_burdened, "%")),
size = 3.5, # Adjusted size
colour = "white",
check_overlap = TRUE,
nudge_y = -0.05,
fontface = "bold") + # Make text bold
labs(title = "Rent Burdened Households by County",
subtitle = "Year: 2017") +
theme_void() +
theme(legend.position = "right")
install.packages("raster")
library(tidyverse)
library(tidycensus)
library(sf)
library(dplyr)
library(raster)
color_palette <- c("#e2a334", "#f9bf3e", "#fcd977", "#9ad7d2", "#74c1b9")
ggplot(data = county17) +
geom_sf(aes(fill = Percent_rent_burdened), color = color_palette) +
geom_sf_text(aes(label = NAME),
size = 4, # Adjusted size
colour = "white",
check_overlap = TRUE,
fontface = "bold") + # Make text bold
geom_sf_text(aes(label = paste0(Percent_rent_burdened, "%")),
size = 3.5, # Adjusted size
colour = "white",
check_overlap = TRUE,
nudge_y = -0.05,
fontface = "bold") + # Make text bold
labs(title = "Rent Burdened Households by County",
subtitle = "Year: 2017") +
theme_void() +
theme(legend.position = "right")
ggplot(data = county17) +
geom_sf(aes(fill = Percent_rent_burdened)) + # Removed color = color_palette here
scale_fill_gradientn(colors = color_palette) + # Use this to apply your color palette
geom_sf_text(aes(label = NAME),
size = 4, # Adjusted size
colour = "white",
check_overlap = TRUE,
fontface = "bold") + # Make text bold
geom_sf_text(aes(label = paste0(Percent_rent_burdened, "%")),
size = 3.5, # Adjusted size
colour = "white",
check_overlap = TRUE,
nudge_y = -0.05,
fontface = "bold") + # Make text bold
labs(title = "Rent Burdened Households by County",
subtitle = "Year: 2017") +
theme_void() +
theme(legend.position = "right")
ggplot(data = county17) +
geom_sf(aes(fill = Percent_rent_burdened)) + # Removed color = color_palette here
scale_fill_gradientn(colors = color_palette) + # Use this to apply your color palette
geom_sf_text(aes(label = NAME),
size = 4, # Adjusted size
colour = "white",
check_overlap = TRUE,
fontface = "bold") + # Make text bold
geom_sf_text(aes(label = paste0(Percent_rent_burdened, "%")),
size = 3.5, # Adjusted size
colour = "black",
check_overlap = TRUE,
nudge_y = -0.05,
fontface = "bold") + # Make text bold
labs(title = "Rent Burdened Households by County",
subtitle = "Year: 2017") +
theme_void() +
theme(legend.position = "right")
ggplot(data = county17) +
geom_sf(aes(fill = Percent_rent_burdened)) + # Removed color = color_palette here
scale_fill_gradientn(colors = color_palette) + # Use this to apply your color palette
geom_sf_text(aes(label = NAME),
size = 4, # Adjusted size
colour = "black",
check_overlap = TRUE,
fontface = "bold") + # Make text bold
geom_sf_text(aes(label = paste0(Percent_rent_burdened, "%")),
size = 3.5, # Adjusted size
colour = "black",
check_overlap = TRUE,
nudge_y = -0.05,
fontface = "bold") + # Make text bold
labs(title = "Rent Burdened Households by County",
subtitle = "Year: 2017") +
theme_void() +
theme(legend.position = "right")
ggplot(data = county22) +
geom_sf(aes(fill = Percent_rent_burdened)) + # Removed color = color_palette here
scale_fill_gradientn(colors = color_palette) + # Use this to apply your color palette
geom_sf_text(aes(label = NAME),
size = 4, # Adjusted size
colour = "black",
check_overlap = TRUE,
fontface = "bold") + # Make text bold
geom_sf_text(aes(label = paste0(Percent_rent_burdened, "%")),
size = 3.5, # Adjusted size
colour = "black",
check_overlap = TRUE,
nudge_y = -0.05,
fontface = "bold") + # Make text bold
labs(title = "Rent Burdened Households by County",
subtitle = "Year: 2022") +
theme_void() +
theme(legend.position = "right")
boundary <- st_read("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/GeoJSON/Boundary.geojson")
fire_districts <- st_read("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/GeoJSON/FireDistricts_FeaturesToJSON.geojson")
managed_areas <- st_read("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/GeoJSON/managed_areasToJSON.geojson")
natural_areas <- st_read("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/GeoJSON/Natural_area_JSON.geojson")
zoned_areas <- st_read("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/GeoJSON/zonedareas_FeaturesToJSON.geojson")
municipal_bound <- st_read("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/GeoJSON/NCDOT_Municipal_Boundaries.geojson")
county_bound <- st_read("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/GeoJSON/NCDOT_County_Boundaries.geojson")
# Landcover Vector
land_cover <- raster("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/Data/Landuse_Raster/LandCover_Watauga/landuse_2019.tif")
View(land_cover)
View(managed_areas)
ggplot(data = managed_areas, fill = MA_NAME) +
geom_sf(aes(fill = Percent_rent_burdened)) + # Removed color = color_palette here
scale_fill_gradientn(colors = color_palette) + # Use this to apply your color palette
labs(title = "Rent Burdened Households by County",
subtitle = "Year: 2022") +
theme_void() +
theme(legend.position = "right")
ggplot(data = managed_areas) +
geom_sf(aes(fill = MA_NAME)) + # Removed color = color_palette here
scale_fill_gradientn(colors = color_palette) + # Use this to apply your color palette
labs(title = "Rent Burdened Households by County",
subtitle = "Year: 2022") +
theme_void() +
theme(legend.position = "right")
ggplot(data = managed_areas) +
geom_sf(aes(fill = MA_NAME)) +
scale_fill_manual(values = color_palette) + # Use this to apply your color palette to categories
labs(title = "Managed Areas by Name",
subtitle = "Year: 2022") +
theme_void() +
theme(legend.position = "right")
ggplot(data = managed_areas) +
geom_sf(aes(fill = OWNEr_TYPE)) +
scale_fill_manual(values = color_palette) + # Use this to apply your color palette to categories
labs(title = "Managed Areas by Name",
subtitle = "Year: 2022") +
theme_void() +
theme(legend.position = "right")
ggplot(data = managed_areas) +
geom_sf(aes(fill = OWNER_TYPE)) +
scale_fill_manual(values = color_palette) + # Use this to apply your color palette to categories
labs(title = "Managed Areas by Name",
subtitle = "Year: 2022") +
theme_void() +
theme(legend.position = "right")
ggplot() +
geom_sf(data = boundary, fill = NA, color = "black") + # Boundary layer, with no fill and black borders
geom_sf(data = managed_areas, aes(fill = OWNER_TYPE)) + # Managed areas layer
scale_fill_manual(values = color_palette) + # Apply your color palette to categories
labs(title = "Managed Areas by Name",
subtitle = "Year: 2022") +
theme_void() +
theme(legend.position = "right")
View(natural_areas)
ggplot() +
geom_sf(data = boundary, fill = NA, color = "black") +
geom_sf(data = natural_areas, aes(fill = NA_NAME)) +
scale_fill_manual(values = color_palette) +
labs(title = "Watauga Managed Areas by Name",
subtitle = "Year: 2022") +
theme_void() +
theme(legend.position = "right")
ggplot() +
geom_sf(data = boundary, fill = NA, color = "black") +
geom_sf(data = natural_areas, aes(fill = OWNER)) +
scale_fill_manual(values = color_palette) +
labs(title = "Watauga Managed Areas by Name",
subtitle = "Year: 2022") +
theme_void() +
theme(legend.position = "right")
color_palette2 <- c("#e2a334", "#3e7067", "#233cad", "#f66c6a",
"#f9bf3e", "#74c1b9", "#abb2ff", "#cfd9e0",
"#f9997f", "#fcd977", "#9ad7d2", "#c9daf8",
"#fc1c0f")
ggplot() +
geom_sf(data = boundary, fill = NA, color = "black") +
geom_sf(data = natural_areas, aes(fill = OWNER)) +
scale_fill_manual(values = color_palette2) +
labs(title = "Watauga Managed Areas by Name",
subtitle = "Year: 2022") +
theme_void() +
theme(legend.position = "right")
color_palette2 <- c("#e2a334", "#3e7067", "#233cad", "#f66c6a",
"#f9bf3e", "#74c1b9", "#abb2ff", "#cfd9e0",
"#f9997f", "#fcd977", "#9ad7d2", "#c9daf8",
"#fc1c0f")
ggplot() +
geom_sf(data = boundary, fill = NA, color = "black") +
geom_sf(data = natural_areas, aes(fill = OWNER)) +
scale_fill_manual(values = color_palette2) +
labs(title = "Watauga Natural Areas by Name",
subtitle = "Year: 2022") +
theme_void() +
theme(legend.position = "right")
color_palette2 <- c("#e2a334", "#3e7067", "#233cad", "#f66c6a",
"#f9bf3e", "#74c1b9", "#abb2ff", "#cfd9e0",
"#f9997f", "#fcd977", "#9ad7d2", "#c9daf8",
"#fc1c0f")
ggplot() +
geom_sf(data = boundary, fill = NA, color = "black") +
geom_sf(data = natural_areas, aes(fill = C_RATING)) +
scale_fill_manual(values = color_palette2) +
labs(title = "Watauga Natural Areas by Name",
subtitle = "Year: 2022") +
theme_void() +
theme(legend.position = "right")
color_palette2 <- c("#e2a334", "#3e7067", "#233cad", "#f66c6a",
"#f9bf3e", "#74c1b9", "#abb2ff", "#cfd9e0",
"#f9997f", "#fcd977", "#9ad7d2", "#c9daf8",
"#fc1c0f")
ggplot() +
geom_sf(data = boundary, fill = NA, color = "black") +
geom_sf(data = natural_areas, aes(fill = C_RATING)) +
scale_fill_manual(values = color_palette) +
labs(title = "Watauga Natural Areas by Name",
subtitle = "Year: 2022") +
theme_void() +
theme(legend.position = "right")
plot(land_cover)
library(tidyverse)
library(tidycensus)
library(sf)
library(dplyr)
library(raster)
library(rasterVis)
install.packages("rasterVis")
library(tidyverse)
library(tidycensus)
library(sf)
library(dplyr)
library(raster)
library(rasterVis)
legend<-pal_nlcd()
library(FedData)
install.packages("FedData")
library(FedData)
legend<-pal_nlcd()
legend<-pal_nlcd()
legend
legend<-pal_nlcd()
legend
cropped_raster <- crop(land_cover, extent(boundary))
projectRaster(land_cover)
crs(land_cover)
crs(boundary)
crs(land_cover)
crs(land_cover)
crs(boundary)
land_cover <- projectRaster(land_cover, crs=crs(boundary))
cropped_raster <- crop(land_cover, extent(boundary))
# Mask out areas outside the boundary
masked_raster <- mask(cropped_raster, boundary)
plot(masked_raster)
r <- masked_raster
vals<-unique(s[[6]])
library(RColorBrewer)
library(ggplot2)
library(colorspace)
library(dplyr)
library(tidyr)
library(readr)
library(terra)
nlcd19 <- masked_raster
class(nlcd19)
## [1] "SpatRaster"
## attr(,"package")
## [1] "terra"
nrow(nlcd19)
## [1] 1579
ncol(nlcd19)
## [1] 1809
res(nlcd19)
## [1] 30 30
source("rasterdf.R")
LCcodes <- unique(nlcd19)[, 1]
class(nlcd19)
## [1] "SpatRaster"
## attr(,"package")
## [1] "terra"
nrow(nlcd19)
## [1] 1579
ncol(nlcd19)
## [1] 1809
res(nlcd19)
## [1] 30 30
LCcodes <- unique(nlcd19)[, 1]
nlcd19 <- masked_raster
LCcodes <- unique(nlcd19)[, 1]
View(r)
nlcd19
libs <- c(
"terra",
"giscoR",
"sf",
"tidyverse",
"ggtern",
"elevatr",
"png",
"rayshader",
"magick"
)
installed_libraries <- libs %in% rownames(
installed.packages()
)
if(any(installed_libraries == F)){
install.packages(
libs[!installed_libraries]
)
}
nlcd_2022 <- raster("C:/Users/fatbo/OneDrive/Desktop/landcover/nlcd_2022.tif")
nlcd_2022 <- projectRaster(nlcd_2022, crs=crs(boundary))
