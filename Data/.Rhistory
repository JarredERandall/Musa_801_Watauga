help(CrossTable)
CrossTable (dat$NTRIPS, dat$INCOME, fisher = FALSE, chisq = TRUE,
expected = TRUE, sresid = FALSE, format="SPSS")
library(tidyverse)
# clear the working environment:
rm(list=ls())
library(tidyverse)
#install.packages ("gmodels")    # (do this and next line just once)
#install.packages ("MASS")
library (gmodels)               # do this everytime you start new R sess
dat <- read.csv("hh_pub_CSV.csv")
# or read.table()
head(dat)
10/124
CrossTable (dat$NTRIPS, dat$INCOME, fisher = FALSE, chisq = TRUE,
expected = TRUE, sresid = FALSE, format="SPSS")
# clear the working environment:
rm(list=ls())
library(tidyverse)
install.packages("tidyverse",dependencies = TRUE)
library(tidyverse)
#install.packages ("gmodels")    # (do this and next line just once)
#install.packages ("MASS")
library (gmodels)               # do this everytime you start new R sess
#install.packages ("gmodels")    # (do this and next line just once)
#install.packages ("MASS")
library (gmodels)               # do this everytime you start new R sess
#install.packages ("gmodels")    # (do this and next line just once)
#install.packages ("MASS")
library (gmodels)               # do this everytime you start new R sess
#install.packages ("gmodels")    # (do this and next line just once)
#install.packages ("MASS")
library (gmodels)               # do this everytime you start new R sess
insta..packages ("gmodels")
install.packages ("gmodels")
library (MASS)
install.packages (MASS)
install.packages ("MASS)
library (MASS)
dat <- read.csv("hh_pub_CSV.csv")
dat <- read.csv("hh_pub_CSV.csv")
install.packages ("MASS")
install.packages("MASS")
library (MASS)
# READ IN THE DATA
rm(list=ls()) # clean out old data
dat <- read.csv("hh_pub_CSV.csv")
# or read.table()
head(dat)
CrossTable (dat$NTRIPS, dat$INCOME, fisher = FALSE, chisq = TRUE,
expected = TRUE, sresid = FALSE, format="SPSS")
10/124
CrossTable (dat$NTRIPS, dat$INCOME, fisher = FALSE, chisq = TRUE,
expected = TRUE, sresid = FALSE, format="SPSS")
CrossTable (dat$NTRIPS, dat$INCOME, fisher = FALSE, chisq = TRUE,
expected = TRUE, sresid = FALSE, format="SPSS")
library (gmodels)               # do this everytime you start new R sess
library (MASS)
# or read.table()
head(dat)
CrossTable (dat$NTRIPS, dat$INCOME, fisher = FALSE, chisq = TRUE,
expected = TRUE, sresid = FALSE, format="SPSS")
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, results='hide', fig.keep='all', cache = TRUE)
#install.packages("spatstat", repos="http://cran.r-project.org")
#install.packages("spatstat.explore", repos="http://cran.r-project.org")
install.packages("spatstat.model", repos="http://cran.r-project.org")
#install.packages("spatstat", repos="http://cran.r-project.org")
#install.packages("spatstat.explore", repos="http://cran.r-project.org")
install.packages("spatstat.model", repos="http://cran.r-project.org")
install.packages("spatstat", repos="http://cran.r-project.org")
#install.packages("spatstat", repos="http://cran.r-project.org")
install.packages("spatstat.explore", repos="http://cran.r-project.org")
#install.packages("jquerylib", repos="http://cran.r-project.org")
#install.packages("sass", repos="http://cran.r-project.org")
#install.packages("cachem", repos="http://cran.r-project.org")
#install.packages("RSocrata", repos="http://cran.r-project.org")
#install.packages("gridExtra", repos="http://cran.r-project.org")
#install.packages("spdep", repos="http://cran.r-project.org")
#install.packages("FNN", repos="http://cran.r-project.org")
#install.packages("grid", repos="http://cran.r-project.org")
#install.packages("kableExtra", repos="http://cran.r-project.org")
#install.packages("classInt", repos="http://cran.r-project.org")
install.packages("mapview", repos="http://cran.r-project.org")
install.packages("mapview", repos = "http://cran.r-project.org")
install.packages("mapview", repos = "http://cran.r-project.org")
install.packages("mapview", repos = "http://cran.r-project.org")
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, results='hide', fig.keep='all', cache = TRUE)
#install.packages("jquerylib", repos="http://cran.r-project.org")
#install.packages("sass", repos="http://cran.r-project.org")
#install.packages("cachem", repos="http://cran.r-project.org")
#install.packages("RSocrata", repos="http://cran.r-project.org")
#install.packages("gridExtra", repos="http://cran.r-project.org")
#install.packages("spdep", repos="http://cran.r-project.org")
#install.packages("FNN", repos="http://cran.r-project.org")
#install.packages("grid", repos="http://cran.r-project.org")
#install.packages("kableExtra", repos="http://cran.r-project.org")
#install.packages("classInt", repos="http://cran.r-project.org")
install.packages("mapview", repos="http://cran.r-project.org")
install.packages("mapview", repos = "http://cran.r-project.org")
#install.packages("spatstat", repos="http://cran.r-project.org")
#install.packages("spatstat.explore", repos="http://cran.r-project.org")
install.packages("FedData", repos="http://cran.r-project.org")
#install.packages("spatstat", repos="http://cran.r-project.org")
#install.packages("spatstat.explore", repos="http://cran.r-project.org")
install.packages("FedData", repos="http://cran.r-project.org")
#install.packages("spatstat", repos="http://cran.r-project.org")
#install.packages("spatstat.explore", repos="http://cran.r-project.org")
install.packages("FedData", repos="http://cran.r-project.org")
#install.packages("spatstat", repos="http://cran.r-project.org")
#install.packages("spatstat.explore", repos="http://cran.r-project.org")
install.packages("FedData", repos="http://cran.r-project.org")
yes
#install.packages("spatstat", repos="http://cran.r-project.org")
#install.packages("spatstat.explore", repos="http://cran.r-project.org")
install.packages("FedData", repos="http://cran.r-project.org")
install.packages("igraph", repos="http://cran.r-project.org")
#install.packages("spatstat", repos="http://cran.r-project.org")
#install.packages("spatstat.explore", repos="http://cran.r-project.org")
install.packages("FedData", repos="http://cran.r-project.org")
#install.packages("spatstat", repos="http://cran.r-project.org")
#install.packages("spatstat.explore", repos="http://cran.r-project.org")
install.packages("FedData", repos="http://cran.r-project.org")
#install.packages("spatstat", repos="http://cran.r-project.org")
#install.packages("spatstat.explore", repos="http://cran.r-project.org")
Sys.setenv(LIBRARY_PATH = "/usr/local/opt/gfortran/lib")
install.packages("FedData", repos="http://cran.r-project.org")
#install.packages("spatstat", repos="http://cran.r-project.org")
#install.packages("spatstat.explore", repos="http://cran.r-project.org")
install.packages("FedData", repos="http://cran.r-project.org")
path <- "C:/Users/alice/Documents/GitHub/Musa_801_Watauga/Data/Landuse_Raster/"
fire_districts <- st_read("https://raw.githubusercontent.com/JarredERandall/Musa_801_Watauga/main/GeoJSON/FireDistricts_FeaturesToJSON.geojson")
fire_districts <- st_read("https://raw.githubusercontent.com/JarredERandall/Musa_801_Watauga/main/GeoJSON/FireDistricts_FeaturesToJSON.geojson")
managed_areas <- st_read("https://raw.githubusercontent.com/JarredERandall/Musa_801_Watauga/main/GeoJSON/managed_areasToJSON.geojson")
natural_areas <- st_read("https://raw.githubusercontent.com/JarredERandall/Musa_801_Watauga/main/GeoJSON/Natural_area_JSON.geojson")
zoned_areas <- st_read("https://raw.githubusercontent.com/JarredERandall/Musa_801_Watauga/main/GeoJSON/zonedareas_FeaturesToJSON.geojson")
municipal_bound <- st_read("https://raw.githubusercontent.com/JarredERandall/Musa_801_Watauga/main/GeoJSON/NCDOT_Municipal_Boundaries.geojson")
county_bound <- st_read("https://raw.githubusercontent.com/JarredERandall/Musa_801_Watauga/main/GeoJSON/NCDOT_County_Boundaries.geojson")
legend<-pal_nlcd()
path <- "C:/Users/alice/Documents/GitHub/Musa_801_Watauga/Data/Landuse_Raster/"
lc_2021 <- raster(paste0(path, "lulc_2021"))
fire_districts <- st_read("https://raw.githubusercontent.com/JarredERandall/Musa_801_Watauga/main/GeoJSON/FireDistricts_FeaturesToJSON.geojson")
fire_districts <- st_read("https://raw.githubusercontent.com/JarredERandall/Musa_801_Watauga/main/GeoJSON/FireDistricts_FeaturesToJSON.geojson")
library(sf)
fire_districts <- st_read("https://raw.githubusercontent.com/JarredERandall/Musa_801_Watauga/main/GeoJSON/FireDistricts_FeaturesToJSON.geojson")
managed_areas <- st_read("https://raw.githubusercontent.com/JarredERandall/Musa_801_Watauga/main/GeoJSON/managed_areasToJSON.geojson")
natural_areas <- st_read("https://raw.githubusercontent.com/JarredERandall/Musa_801_Watauga/main/GeoJSON/Natural_area_JSON.geojson")
zoned_areas <- st_read("https://raw.githubusercontent.com/JarredERandall/Musa_801_Watauga/main/GeoJSON/zonedareas_FeaturesToJSON.geojson")
municipal_bound <- st_read("https://raw.githubusercontent.com/JarredERandall/Musa_801_Watauga/main/GeoJSON/NCDOT_Municipal_Boundaries.geojson")
municipal_bound <- st_read("https://raw.githubusercontent.com/JarredERandall/Musa_801_Watauga/main/GeoJSON/NCDOT_Municipal_Boundaries.geojson")
county_bound <- st_read("https://raw.githubusercontent.com/JarredERandall/Musa_801_Watauga/main/GeoJSON/NCDOT_County_Boundaries.geojson")
legend<-pal_nlcd()
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, results='hide', fig.keep='all', cache = TRUE)
fire_districts <- st_read("https://raw.githubusercontent.com/JarredERandall/Musa_801_Watauga/main/GeoJSON/FireDistricts_FeaturesToJSON.geojson")
library(sf)
fire_districts <- st_read("https://raw.githubusercontent.com/JarredERandall/Musa_801_Watauga/main/GeoJSON/FireDistricts_FeaturesToJSON.geojson")
managed_areas <- st_read("https://raw.githubusercontent.com/JarredERandall/Musa_801_Watauga/main/GeoJSON/managed_areasToJSON.geojson")
natural_areas <- st_read("https://raw.githubusercontent.com/JarredERandall/Musa_801_Watauga/main/GeoJSON/Natural_area_JSON.geojson")
zoned_areas <- st_read("https://raw.githubusercontent.com/JarredERandall/Musa_801_Watauga/main/GeoJSON/zonedareas_FeaturesToJSON.geojson")
municipal_bound <- st_read("https://raw.githubusercontent.com/JarredERandall/Musa_801_Watauga/main/GeoJSON/NCDOT_Municipal_Boundaries.geojson")
county_bound <- st_read("https://raw.githubusercontent.com/JarredERandall/Musa_801_Watauga/main/GeoJSON/NCDOT_County_Boundaries.geojson")
legend<-nlcd_colors()
legend <- "C:/Users/alice/Downloads/landcover_legend.csv/"
path <- "C:/Users/alice/Documents/GitHub/Musa_801_Watauga/Data/Landuse_Raster/"
lc_2021 <- raster(paste0(path, "lulc_2021"))
library(raster)
lc_2021 <- raster(paste0(path, "lulc_2021"))
path <- "C:/Users/alice/Documents/GitHub/Musa_801_Watauga/Data/Landuse_Raster/"
lc_2021 <- raster(paste0(path, "lulc_2021"))
legend <- "C:/Users/alice/Documents/GitHub/Musa_801_Watauga/Data/landcover_legend.csv/"
path <- "C:/Users/alice/Documents/GitHub/Musa_801_Watauga/Data/Landuse_Raster/"
lc_2021 <- raster(paste0(path, "lulc_2021"))
lc_2021 <- raster("C:/Users/alice/Documents/GitHub/Musa_801_Watauga/Data/Landuse_Raster/", "lulc_2021"))
lc_2021 <- raster("C:/Users/alice/Documents/GitHub/Musa_801_Watauga/Data/Landuse_Raster/lulc_2021"))
lc_2021 <- raster("C:/Users/alice/Documents/GitHub/Musa_801_Watauga/Data/Landuse_Raster/lulc_2021")
setwd("~/Downloads")
setwd("C:/Users/alice/Documents/GitHub/Musa_801_Watauga/Data/")
setwd("/Users/alice/Documents/GitHub/Musa_801_Watauga/Data")
lc_2021 <- raster("C:/Users/alice/Documents/GitHub/Musa_801_Watauga/Data/Landuse_Raster/lulc_2021")
file_path <- "C:/Users/alice/Documents/GitHub/Musa_801_Watauga/Data/Landuse_Raster/lulc_2021"
# Check if the file exists
if (file.exists(file_path)) {
# Attempt to read the raster file
lc_2021 <- raster(file_path)
} else {
# Print an error message if the file doesn't exist
cat("Error: The specified file does not exist.\n")
# Check if the file exists
if (file.exists(file_path)) {
# Attempt to read the raster file
lc_2021 <- raster(file_path)
} else {
# Print an error message if the file doesn't exist
cat("Error: The specified file does not exist.\n")
}
lc_2021 <- raster("C:/Users/alice/Documents/GitHub/Musa_801_Watauga/Data/Landuse_Raster/lulc_2021")
lc_2019 <- raster(paste0(path, "lulc_2019"))
lc_2019 <- raster(paste0(path, "lulc_2019"))
lc_2021 <- raster("C:/Users/alice/Documents/GitHub/Musa_801_Watauga/Data/Landuse_Raster/lulc_2021")
knitr::opts_chunk$set(echo = TRUE)
dem <- raster("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/Data/watag_dem/")
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
library(raster)
library(rgdal)
library(animation)
library(rasterVis)
library(FedData)
library(tidyverse)
library(tidycensus)
library(sf)
library(dplyr)
library(animation)
library(RColorBrewer)
library(ggplot2)
library(colorspace)
library(tidyr)
library(readr)
library(terra)
library(kableExtra)
library(exactextractr)
options(scipen = 999, digits = 2)
color_palette <- c("#e2a334", "#f9bf3e", "#fcd977", "#9ad7d2", "#74c1b9")
boundary <- st_read("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/GeoJSON/Boundary.geojson")
fire_districts <- st_read("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/GeoJSON/FireDistricts_FeaturesToJSON.geojson")
managed_areas <- st_read("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/GeoJSON/managed_areasToJSON.geojson")
natural_areas <- st_read("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/GeoJSON/Natural_area_JSON.geojson")
zoned_areas <- st_read("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/GeoJSON/zonedareas_FeaturesToJSON.geojson")
municipal_bound <- st_read("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/GeoJSON/NCDOT_Municipal_Boundaries.geojson")
county_bound <- st_read("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/GeoJSON/NCDOT_County_Boundaries.geojson")
parcels <- st_read("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/Data/parcel/parcel.geojson")
# Landcover Vector
legend<-pal_nlcd()
lc_2021 <- raster("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/Data/Landuse_Raster/lulc_2021")
lc_2019 <- raster("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/Data/Landuse_Raster/lulc_2019")
lc_2016 <- raster("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/Data/Landuse_Raster/lulc_2016")
lc_2013 <- raster("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/Data/Landuse_Raster/lulc_2013")
lc_2011 <- raster("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/Data/Landuse_Raster/lulc_2011")
dem <- raster("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/Data/watag_dem/")
dem <- raster("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/Data/watag_dem/dem_2/")
plot(dem)
elevation_extract <- terra::extract(dem,parcels,fun='mean',na.rm=TRUE) %>%
rename(elevation_mean = w001001) %>%
mutate(elevation = elevation_mean - min(elevation_mean))
x <- terrain(dem, "slope")
plot(x)
elevation_extract <- terra::extract(dem,parcels$GlobalID,fun='mean',na.rm=TRUE) %>%
rename(elevation_mean = w001001) %>%
mutate(elevation = elevation_mean - min(elevation_mean))
elevation_extract <- terra::extract(dem,parcels,fun='mean',na.rm=TRUE) %>%
rename(elevation_mean = w001001) %>%
mutate(elevation = elevation_mean - min(elevation_mean))
View(x)
elevation_extract <- terra::extract(dem,parcels,fun='mean',na.rm=TRUE)
slope_under_65 <- dem < 33  # 65% slope is approximately 33 degrees
slope_polygons <- rasterToPolygons(slope_under_65, fun=function(x){x==1}, dissolve=TRUE)
slope <- terrain(dem, opt = "slope", unit = "degrees")  # Calculates slope in degrees
slope_under_65 <- slope < 33  # Identify cells with slope less than approximately 33 degrees
slope_polygons <- rasterToPolygons(slope_under_65, fun=function(x){x==1}, dissolve=TRUE)
slope_polygons <- rasterToPolygons(slope_under_65, fun=function(x){x==1}, dissolve=TRUE)
intersection <- st_intersection(st_as_sf(slope_polygons), parcels)
View(parcels)
permit_17 <-read.csv("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/permit/permit_17_summary.csv")
permit_17 <-read.csv("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/data/permit/permit_17_summary.csv")
permit_22 <-read.csv("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/data/permit/permit_22_summary.csv")
result <- left_join(parcels, permit_17, by = "GlobalID")
View(result)
result2 <- left_join(parcels, permit_22, by = "GlobalID")
View(result2)
View(result2)
View(result2)
result2 <- left_join(result, permit_22, by = "GlobalID")
result2$n_permit22[is.na(result2$n_permit22)] <- 0
View(result2)
result2$n_permit22[is.na(result2$n_permit_22)] <- 0
result2$n_permit17[is.na(result2$n_permit_17)] <- 0
View(result2)
permit_17 <-read.csv("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/data/permit/permit_17_summary.csv")
permit_22 <-read.csv("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/data/permit/permit_22_summary.csv")
# Assuming newparcel and sample are sf objects
# And both have a column named 'GlobalID'
result <- left_join(parcels, permit_17, by = "GlobalID")
result2 <- left_join(result, permit_22, by = "GlobalID")
parcel_data_filtered <- subset(parcels, YRBUILT <= 0 & permit_17 > 0 & permit_22 > 0)
View(permit_17)
permit_17[is.na(permit_17$n_permit_17)] <- 0
View(permit_17)
permit_17 <-read.csv("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/data/permit/permit_17_summary.csv")
permit_22 <-read.csv("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/data/permit/permit_22_summary.csv")
result2$permit_17[is.na(result2$permit_17)] <- 0
result2$permit_17[is.na(result2$n_permit_17)] <- 0
View(result2)
data <- replace(result2 , is.na(result2$n_permit_17), 0)
data <- replace(result2$n_permit_17 , is.na(result2$n_permit_17), 0)
replace(result2$n_permit_17 , is.na(result2$n_permit_17), 0)
View(result2)
if("permit_17" %in% names(result2)) {
result2$n_permit_17[is.na(result2$n_permit_17)] <- 0
} else {
cat("Column permit_17 does not exist in the dataset.\n")
}
if("permit_22" %in% names(result2)) {
result2$n_permit_22[is.na(result2$n_permit_22)] <- 0
} else {
cat("Column permit_22 does not exist in the dataset.\n")
}
View(result2)
permit_17 <-read.csv("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/data/permit/permit_17_summary.csv")
permit_22 <-read.csv("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/data/permit/permit_22_summary.csv")
# Assuming newparcel and sample are sf objects
# And both have a column named 'GlobalID'
result <- left_join(parcels, permit_17, by = "GlobalID")
result2 <- left_join(result, permit_22, by = "GlobalID")
if("permit_17" %in% names(result2)) {
result2$n_permit_17[is.na(result2$n_permit_17)] <- 0
} else {
cat("Column permit_17 does not exist in the dataset.\n")
}
if("permit_22" %in% names(result2)) {
result2$n_permit_22[is.na(result2$n_permit_22)] <- 0
} else {
cat("Column permit_22 does not exist in the dataset.\n")
}
View(result2)
permit_17 <-read.csv("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/data/permit/permit_17_summary.csv")
permit_22 <-read.csv("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/data/permit/permit_22_summary.csv")
# Assuming newparcel and sample are sf objects
# And both have a column named 'GlobalID'
result <- left_join(parcels, permit_17, by = "GlobalID")
result2 <- left_join(result, permit_22, by = "GlobalID")
result2$permit_17 <- ifelse(is.na(result2$n_permit_17), 0, result2$n_permit_17)
result2$permit_22 <- ifelse(is.na(result2$n_permit_22), 0, result2$n_permit_22)
View(result2)
permit_17 <-read.csv("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/data/permit/permit_17_summary.csv")
permit_22 <-read.csv("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/data/permit/permit_22_summary.csv")
# Assuming newparcel and sample are sf objects
# And both have a column named 'GlobalID'
result <- left_join(parcels, permit_17, by = "GlobalID")
result2 <- left_join(result, permit_22, by = "GlobalID")
result2 <- result2 %>%
mutate(
permit_17 = replace_na(n_permit_17, 0),
permit_22 = replace_na(n_permit_22, 0)
)
View(result2)
parcel_data_filtered <- subset(parcels, YRBUILT <= 0 & permit_17 > 0 & permit_22 > 0)
parcel_data_filtered <- subset(result2 , YRBUILT <= 0 & n_permit_17 > 0 & n_permit_22 > 0)
View(parcel_data_filtered)
permit_17 <-read.csv("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/data/permit/permit_17_summary.csv")
permit_22 <-read.csv("C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/data/permit/permit_22_summary.csv")
# Assuming newparcel and sample are sf objects
# And both have a column named 'GlobalID'
result <- left_join(parcels, permit_17, by = "GlobalID")
result2 <- left_join(result, permit_22, by = "GlobalID")
result2 <- result2 %>%
mutate(
permit_17 = replace_na(n_permit_17, 0),
permit_22 = replace_na(n_permit_22, 0)
)
result2_filtered <- result2 %>%
filter(!(YRBUILT > 0 & n_permit_17 < 1 & n_permit_22 < 1))
View(result2_filtered)
result2_filtered$geometry <- NULL
write.csv(result2_filtered, "C:/Users/fatbo/OneDrive/Documents/GitHub/Musa_801_Watauga/data/no_struct.csv", row.names = FALSE)
